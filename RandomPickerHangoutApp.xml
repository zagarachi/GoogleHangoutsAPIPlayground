<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *	
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
	<ModulePrefs title="Hangout Starter">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
	<Content type="html"><![CDATA[     

<html>
<style type="text/css">
<!--
.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);  
  border: 1px solid #bbb;
}

.button:active {
	background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333)); 
	background: -moz-linear-gradient(bottom, #ddd, #aaa); }
	
.displayed {
    display: block;
    margin-left: auto;
    margin-right: auto; }
	
P.displayed {
     text-align: center; }
-->
</style>
<body>

<script src="https://hangoutsapi.talkgadget.google.com/hangouts/api/hangout.js?v=1.2" ></script>

<p>
<input class="button displayed" type="button" value="Pick Someone!" id="pickParticipant" 
    style="visibility:hidden;"
    onClick="pickParticipant()"/>
</p>

<div id="pickedParticipant"></div>

<hr>

<script>
//store who you are, incase you dont know :P
var me = '';
var topHat = '';
var overlay = '';

function pickParticipant() {
	var participants = gapi.hangout.getParticipants();

	var participant = participants[Math.floor(Math.random() * participants.length)];

	gapi.hangout.data.setValue('pickedParticipant', JSON.stringify(participant));
  
}

function onStateChangedHandler(stateChangedEvent)
{
	setSelectedParticipantResultHTML(JSON.parse(gapi.hangout.data.getValue('pickedParticipant')));
}

function setSelectedParticipantResultHTML(selectedParticipant)
{
	var div = document.getElementById('pickedParticipant');
	
	// If the person is not using the app
	if (!selectedParticipant.person) 
	{
		div.innerHTML = '<p>Picked a participant not running this app.</p>';
		overlay.setVisible(false);
	}
	// If you have been picked
	else if (me.id == selectedParticipant.id)
	{
		div.innerHTML = '<p>You have been chosen!</p>';
		overlay.setVisible(true);
	}
	//show who has been chosen
	else
	{
		var retVal = '<p class=\"displayed\">' + selectedParticipant.person.displayName + '</p>';
		retVal += '<img class=\"displayed\" src=\"'+ selectedParticipant.person.image.url + '\"/>';
		retVal += '<p class=\"displayed\"> Has been chosen!</p>';

		div.innerHTML = retVal;
		overlay.setVisible(false);
	}
}

function init() {
	// When API is ready...                                                         
	gapi.hangout.onApiReady.add(
		function(eventObj) {
			if (eventObj.isApiReady) {
				document.getElementById('pickParticipant').style.visibility = 'visible';
				console.log('Adding onStateChanged event handeler')
				gapi.hangout.data.onStateChanged.add(onStateChangedHandler);
				me = gapi.hangout.getLocalParticipant();
				topHat = gapi.hangout.av.effects.createImageResource('https://raw.github.com/zagarachi/GoogleHangoutsAPIPlayground/master/arrow.png');
				overlay = topHat.createFaceTrackingOverlay(
				{
					'trackingFeature':
					gapi.hangout.av.effects.FaceTrackingFeature.NOSE_ROOT,
					'scaleWithFace': true,
					'rotateWithFace': true,
					'scale': 0.5
				});
			}
	});
}

// Wait for gadget to load.                                                       
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>

